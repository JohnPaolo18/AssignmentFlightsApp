@page "/flight"
@using AssignmentFlightsApp.Models

<div class="container">
    <h3 class="text-center">Flight finder</h3>
    <div class="row">
        <div class="col">
            <div class="row">
                <div class="col">
                    <label for="from">From</label>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <select @bind="selectOption.DepartureAirport" class="form-select" aria-label="Default select example" name="from">
                        @foreach (string departure in departureAirport)
                        {
                            <option value="@departure">@departure</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="row">
                <div class="col">
                    <label for="to">To</label>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <select @bind="selectOption.ArrivalAirport" class="form-select" aria-label="Default select example" name="to">
                        @foreach (string arrival in arrivalAirport)
                        {
                            <option value="@arrival">@arrival</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="row">
                <div class="col">
                    <label for="day">Day</label>
                </div>
            </div>
            <div class="row">
                <div class="col">
                    <select @bind="selectOption.Weekday" class="form-select" aria-label="Default select example" name="day">
                        @foreach (string day in weekdays)
                        {
                            <option value="@day">@day</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="col">
            <div class="row py-4">
                <button @onclick="SearchFlights" class="btn btn-primary">Find flight</button>
            </div>
        </div>
    </div>
    <h2 class="text-center p-2">Flights</h2>
    <div class="row">
        <select class="form-select" aria-label="Default select example" name="matchingFlight">
            @foreach (Flight flight in matchingFlights)
            {
                <option value="@flight">@flight</option>
            }
        </select>
    </div>

    <h2 class="text-center p-2">Reserve</h2>
    <div class="row">
        <div class="col">
            <label for="Flight Code">Flight Code</label>
        </div>
        <select class="form-select" aria-label="Default select example" name="matchingFlight">
            @foreach (Flight flight in matchingFlights)
            {
                <option value="@flight">@flight.Code</option>
            }
        </select>
    </div>
    <div class="row">
        <div class="col">
            <label for="Airline">Airline</label>
        </div>
        <select class="form-select" aria-label="Default select example" name="matchingFlight">
            @foreach (Flight flight in matchingFlights)
            {
                <option value="@flight">@flight.Airline</option>
            }
        </select>
    </div>
    <div class="row">
        <div class="col">
            <label for="Day">Day</label>
        </div>
        <select class="form-select" aria-label="Default select example" name="matchingFlight">
            @foreach (Flight flight in matchingFlights)
            {
                <option value="@flight">@flight.Weekday</option>
            }
        </select>
    </div>
    <div class="row">
        <div class="col">
            <label for="Time">Time</label>
        </div>
        <select class="form-select" aria-label="Default select example" name="matchingFlight">
            @foreach (Flight flight in matchingFlights)
            {
                <option value="@flight">@flight.Time</option>
            }
        </select>
    </div>
    <div class="row">
        <div class="col">
            <label for="Cost">Cost</label>
        </div>
        <select class="form-select" aria-label="Default select example" name="matchingFlight">
            @foreach (Flight flight in matchingFlights)
            {
                <option value="@flight">@flight.CostPerSeat</option>
            }
        </select>
    </div>
    <div class="flex-item input-container">
        <label for="Name">Name</label>
    </div>
    <div class="flex-item input-container" aria-label="Default select example" name="Name">
        <input type="text" id="name" placeholder="Name">
    </div>
    <div class="flex-item input-container">
        <label for="Citizenship">Citizenship</label>
    </div>
    <div class="flex-item input-container" aria-label="Default select example" name="Citizenship">
        <input type="text" id="Citizenship" placeholder="Citizenship">
    </div> 
    <div class="col">
        <div class="row py-4">
            <button @onclick="SaveReservation" class="btn btn-primary">reservation</button>
        </div>
    </div>
</div>

<div class="row">
    <div class="columnC myself">
        <div class="row">
            <div class="center">
                <h3>Search</h3>
            </div>
        </div>
        <br />
        <div>
            <label>Code: </label><input class="form-control" type="text" id="code" name="code" @bind="inputResCode">
            <label>Airline: </label><input class="form-control" type="text" id="airline" name="airline" @bind="inputAirline">
            <label>Name: </label><input class="form-control" type="text" id="name" name="name" @bind="inputName">
            <br />

            <div class="row">
                <div class="center">
                    <button class="btn btn-primary" @onclick="SearchReservations">Find Reservations</button>
                </div>
            </div>
        </div>
        <br />
        <br />
        <br />
        <div class="row">
            <div class="center">
                <h3>Reservations</h3>
            </div>
        </div>
        <br />
        <br />
        <select class="form-control" onfocus="this.selectedIndex = -1;" @bind="currentReservation">
            <option value=" " selected>Please select a reservation</option>
            @if (resNew.Count() == 0)
            {
                <option>Loading...</option>
            }
            else
            {
                @foreach (var res in resNew)
                {
                    <option value="@res.Code"> @res.Code,@res.FlightCode,@res.Airline,@res.Cost,@res.Name,@res.Citizenship,@res.Active </option>
                }
            }
        </select>
        <br />
    </div>
</div>

<style>
    .flex-item{
        flex: 1;
    }

    .flex-item input {
        height: 40px;
        width: 102%;
        border: 1px solid #ced4da;
        border-radius: 4px;
        font-size: 1em;
        align-items: center;
        margin-left: -10px;
    }

    .flex-item input:focus {
        border: 1px solid #007bff;
        outline: none;
    }
</style>

    

@code {

    //ROMERRS PART
    string inputResCode = "";
    string inputAirline = "";
    string inputName = "";
    string currentReservation;

    Flight.Reservations fr = new Flight.Reservations();
    List<Reservation> reservations;
    List<Reservation> resNew = new List<Reservation>();

    /*This is the method called after the "Find Flights" button is clicked.
     * It will find reserved flights from reservation.csv file according to
     * user inputs of reservation code and/or airline and/or name.
    */
    private void SearchReservations()
    {
        reservations = Flight.Reservations.GetReservations();
        resNew.Clear();
        Reservation NewReservation;

        if ((inputResCode != "") || (inputAirline != "") || (inputName != ""))
        {
            foreach (var res in reservations)
            {
                if (((inputResCode != "") && (inputResCode.ToUpper() == res.Code.ToUpper())) &&
                    ((inputAirline != "") && (inputAirline.ToUpper() == res.Airline.ToUpper())) &&
                    ((inputName != "") && (inputName.ToUpper() == res.Name.ToUpper())))
                {
                    NewReservation = new Reservation(res.Code, res.FlightCode, res.Airline, res.Cost, res.Name, res.Citizenship, res.Active.ToString());
                    resNew.Add(NewReservation);
                }
                // Add other cases to find reservations by code, name, and/or airline
                // For code
                else if (string.IsNullOrEmpty(inputResCode) && string.IsNullOrEmpty(inputAirline) && !string.IsNullOrEmpty(inputName))
                {
                    if (res.Name.ToUpper() == inputName.ToUpper())
                    {
                        NewReservation = new Reservation(res.Code, res.FlightCode, res.Airline, res.Cost, res.Name, res.Citizenship, res.Active.ToString());
                        resNew.Add(NewReservation);
                    }
                }
                // For airline
                else if (string.IsNullOrEmpty(inputResCode) && !string.IsNullOrEmpty(inputAirline) && string.IsNullOrEmpty(inputName))
                {
                    if (res.Airline.ToUpper() == inputAirline.ToUpper())
                    {
                        NewReservation = new Reservation(res.Code, res.FlightCode, res.Airline, res.Cost, res.Name, res.Citizenship, res.Active.ToString());
                        resNew.Add(NewReservation);
                    }
                }
                // For name
                else if (!string.IsNullOrEmpty(inputResCode) && string.IsNullOrEmpty(inputAirline) && string.IsNullOrEmpty(inputName))
                {
                    if (res.Code.ToUpper() == inputResCode.ToUpper())
                    {
                        NewReservation = new Reservation(res.Code, res.FlightCode, res.Airline, res.Cost, res.Name, res.Citizenship, res.Active.ToString());
                        resNew.Add(NewReservation);
                    }
                }
            }
        }
        else
        {
            resNew = reservations;
        }
    }

}
